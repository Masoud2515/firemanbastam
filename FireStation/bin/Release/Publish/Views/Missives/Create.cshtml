@model FireStation.Models.tbl_Missives

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutPannel.cshtml";
}
<div class="card">
    <div class="row">
        <div class="col-lg-12 p-4">
            <h4>افزودن بخشنامه</h4>
            <hr />
            @using (Html.BeginForm("Create", "Missives", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <form class="form-control">
                    <div class="row">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="col-lg-4">
                            <div class="col-lg-12">
                                <label class="h5">آپلود فایل عکس</label>
                                <div class="form-group">
                                    <div class="input-group">
                                        <div class="custom-file mb-2">
                                            <input class="custom-file-input" type="file" name="Fdoc" id="customFile" accept="image/*" onchange="showMyImage(this)">
                                            <label class="custom-file-label getFile" for="customFile">فایل عکس</label>
                                        </div>
                                    </div>
                                </div>
                                <img id="thumbnil" style="width:60%;" src="" alt="" />
                                <div id="file-upload-filename" class="mt-2"></div>
                                <script>
                                    //Name of File
                                    var input = document.getElementById('customFile');
                                    var infoArea = document.getElementById('file-upload-filename');

                                    input.addEventListener('change', showFileName);

                                    function showFileName(event) {

                                        // the change event gives us the input it occurred in
                                        var input = event.srcElement;

                                        // the input has an array of files in the `files` property, each one has a name that you can use. We're just using the name here.
                                        var fileName = input.files[0].name;

                                        // use fileName however fits your app best, i.e. add it into a div
                                        infoArea.textContent = 'نام فایل: ' + fileName;
                                    }
                                </script>
                            </div>
                        </div>
                        <div class="col-lg-2">
                            <label class="control-label h4">  تاریخ بخشنامه:</label>
                            <div class="form-group">
                                <div class="input-group datepiker">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text" data-MdDateTimePicker="true" data-TargetSelector="#inlineFormInputGroup" data-EnableTimePicker="false" data-Placement="left" data-Trigger="click"><img src="~/Content/calendar-512.png" alt="cal" width="20" height="20" /></div>
                                    </div>
                                    <input type="text" class="form-control border-primary" name="MissiveDate" id="inlineFormInputGroup" data-MdDateTimePicker="true" data-TargetSelector="#inlineFormInputGroup" data-EnableTimePicker="false" data-Placement="left" data-Trigger="click" placeholder="تاریخ" dir="ltr">
                                </div>
                                @Html.ValidationMessageFor(model => model.MissiveDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row col-lg-8">
                            <div class="col-lg-6">
                                @Html.LabelFor(model => model.MissiveTitel, htmlAttributes: new { @class = "control-label h6" })<span class="required text-danger">*</span>
                                @Html.EditorFor(model => model.MissiveTitel, new { htmlAttributes = new { @class = "form-control border-primary" } })
                                @Html.ValidationMessageFor(model => model.MissiveTitel, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-lg-6">
                                @Html.LabelFor(model => model.MissiveNumber, htmlAttributes: new { @class = "control-label h6" })<span class="required text-danger">*</span>
                                @Html.EditorFor(model => model.MissiveNumber, new { htmlAttributes = new { @class = "form-control border-primary" } })
                                @Html.ValidationMessageFor(model => model.MissiveNumber, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-12">
                                @Html.LabelFor(model => model.MissiveText, htmlAttributes: new { @class = "control-label h6" })<span class="required text-danger">*</span>
                                <textarea id="userinput8" rows="5" class="form-control border-primary" name="MissiveText"></textarea>
                                @Html.ValidationMessageFor(model => model.MissiveText, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row mt-5 justify-content-center">
                        <div class="col-2">
                            <input class="btn btn-success btn-block" type="submit" value="ثبت" />
                        </div>
                        <div class="col-2">
                            <a class="btn btn-outline-dark btn-block" href="~/Missives">بازگشت</a>
                        </div>
                    </div>
                </form>
            }
        </div>
    </div>
</div>