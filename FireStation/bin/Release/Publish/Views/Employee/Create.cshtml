@model FireStation.Models.tbl_Employee

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutPannel.cshtml";
}


@using (Html.BeginForm("Create", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="card">
        <div class="row">
            <div class="col-lg-12 p-4">
                <h4>افزودن کارمندان</h4>
                <hr />
                <form class="form-control">
                    <div class="row justify-content-center">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="col-lg-2">
                            @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label h6" })<span class="required text-danger">*</span>
                            @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control border-primary" } })
                            @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-lg-2">
                            @Html.LabelFor(model => model.EmployeeLastName, htmlAttributes: new { @class = "control-label h6" })<span class="required text-danger">*</span>
                            @Html.EditorFor(model => model.EmployeeLastName, new { htmlAttributes = new { @class = "form-control border-primary" } })
                            @Html.ValidationMessageFor(model => model.EmployeeLastName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-2">
                            @Html.LabelFor(model => model.EmployeeFName, htmlAttributes: new { @class = "control-label h6" })<span class="required text-danger">*</span>
                            @Html.EditorFor(model => model.EmployeeFName, new { htmlAttributes = new { @class = "form-control border-primary" } })
                            @Html.ValidationMessageFor(model => model.EmployeeFName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-2">
                            @Html.LabelFor(model => model.EmployeePhone, htmlAttributes: new { @class = "control-label h6" })<span class="required text-danger">*</span>
                            @Html.EditorFor(model => model.EmployeePhone, new { htmlAttributes = new { @class = "form-control border-primary" } })
                            @Html.ValidationMessageFor(model => model.EmployeePhone, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-2">
                            @Html.LabelFor(model => model.EmployeeCode, htmlAttributes: new { @class = "control-label h6" })<span class="required text-danger">*</span>
                            @Html.EditorFor(model => model.EmployeeCode, new { htmlAttributes = new { @class = "form-control border-primary" } })
                            @Html.ValidationMessageFor(model => model.EmployeeCode, "", new { @class = "text-danger" })
                        </div>


                    </div>
                    <div class="row justify-content-center mt-3">
                        <div class="col-lg-2">
                            @Html.LabelFor(model => model.StateId, "StateId", htmlAttributes: new { @class = "control-label h6" })<span class="required text-danger">*</span>
                            @Html.DropDownList("StateId", null, htmlAttributes: new { @class = "form-control border-primary" })
                            @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-lg-2">
                            @Html.LabelFor(model => model.EmployeeSex, htmlAttributes: new { @class = "control-label h6" })<span class="required text-danger">*</span>
                            <div class="checkbox">
                                <select class="form-control border-primary selectpicker" data-live-search="true" name="EmployeeSex" required>
                                    <option selected hidden>اتخاب جنسیت</option>
                                    <option value="True">مرد</option>
                                    <option value="False">زن</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.EmployeeSex, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*<div class="col-lg-2">
                                @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label h6" })
                                <select class="form-control border-primary" name="EmployeeName">
                                    <option selected disabled>@Model.EmployeeName</option>
                                    <option value="SUPERADMIN">مدیر اصلی</option>
                                    <option value="SUBADMIN">مدیر سازمان</option>
                                    <option value="ADMIN">رئیس ایستگاه</option>
                                    <option value="OPR">اپراتور</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
                            </div>*@

                        <div class="col-lg-2">
                            @Html.LabelFor(model => model.EmployeeMCode, htmlAttributes: new { @class = "control-label h6" })<span class="required text-danger">*</span>
                            @Html.EditorFor(model => model.EmployeeMCode, new { htmlAttributes = new { @class = "form-control border-primary" } })
                            @Html.ValidationMessageFor(model => model.EmployeeMCode, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-lg-2">
                            @Html.LabelFor(model => model.EmployeeBirthdate, htmlAttributes: new { @class = "control-label h6" })<span class="required text-danger">*</span>
                            <div class="form-group">
                                <div class="input-group datepiker">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text" data-MdDateTimePicker="true" data-TargetSelector="#inlineFormInputGroup" data-EnableTimePicker="false" data-Placement="left" data-Trigger="click"><img src="~/Content/calendar-512.png" alt="cal" width="20" height="20" /></div>
                                    </div>
                                    <input type="text" class="form-control border-primary" name="EmployeeBirthdate" id="inlineFormInputGroup" data-MdDateTimePicker="true" data-TargetSelector="#inlineFormInputGroup" data-EnableTimePicker="false" data-Placement="left" data-Trigger="click" placeholder="تاریخ" dir="ltr">
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.EmployeeBirthdate, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-lg-2">
                            @Html.LabelFor(model => model.EmployeeWork, htmlAttributes: new { @class = "control-label h6" })<span class="required text-danger">*</span>
                            <select class="form-control border-primary" name="EmployeeWork" required>
                                <option selected hidden>انتخاب</option>
                                <option value="Fireman">آتشنشان</option>
                                <option value="Employee">کارمند</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.EmployeeWork, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="row justify-content-center">
                        <div class="col-md-8">
                            @Html.LabelFor(model => model.EmployeeAdress, htmlAttributes: new { @class = "control-label h6" })
                            @Html.EditorFor(model => model.EmployeeAdress, new { htmlAttributes = new { @class = "form-control border-primary" } })
                            @Html.ValidationMessageFor(model => model.EmployeeAdress, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-lg-2">
                            @Html.LabelFor(model => model.EmployeeDateRegistered, htmlAttributes: new { @class = "control-label h6" })<span class="required text-danger">*</span>
                            <div class="form-group">
                                <div class="input-group datepiker">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text" data-MdDateTimePicker="true" data-TargetSelector="#inlineFormInputGroup1" data-EnableTimePicker="false" data-Placement="left" data-Trigger="click"><img src="~/Content/calendar-512.png" alt="cal" width="20" height="20" /></div>
                                    </div>
                                    <input type="text" class="form-control border-primary" name="EmployeeDateRegistered" id="inlineFormInputGroup1" data-MdDateTimePicker="true" data-TargetSelector="#inlineFormInputGroup1" data-EnableTimePicker="false" data-Placement="left" data-Trigger="click" placeholder="تاریخ" dir="ltr">
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.EmployeeDateRegistered, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row justify-content-center">

                        <div class="col-lg-2">
                            <label class="control-label h6">آپلود فایل عکس</label>
                            <div class="form-group">
                                <div class="input-group">
                                    <div class="custom-file mb-2">
                                        <input class="custom-file-input" type="file" name="pic" id="customFile" accept="image/*" onchange="showMyImage(this)">
                                        <label class="custom-file-label getFile" for="customFile">فایل عکس</label>
                                    </div>
                                </div>
                            </div>
                            <div id="file-upload-filename"></div>
                            <script>
                                //Name of File
                                var input = document.getElementById('customFile');
                                var infoArea = document.getElementById('file-upload-filename');

                                input.addEventListener('change', showFileName);

                                function showFileName(event) {

                                    // the change event gives us the input it occurred in
                                    var input = event.srcElement;

                                    // the input has an array of files in the `files` property, each one has a name that you can use. We're just using the name here.
                                    var fileName = input.files[0].name;

                                    // use fileName however fits your app best, i.e. add it into a div
                                    infoArea.textContent = 'نام فایل: ' + fileName;
                                }
                            </script>
                        </div>
                        <div class="col-lg-2">
                            <img id="thumbnil" style="width:80%;" src="" alt="" />
                        </div>
                    </div>
                    <div class="row mt-5 justify-content-center">
                        <div class="col-2">
                            <input class="btn btn-success btn-block" type="submit" value="ثبت" />
                        </div>
                        <div class="col-2">
                            <a class="btn btn-outline-dark btn-block" href="~/Employee">بازگشت</a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
}
