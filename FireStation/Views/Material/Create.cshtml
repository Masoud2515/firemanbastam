@model FireStation.Models.tbl_Material

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutPannel.cshtml";
}


@using (Html.BeginForm("Create", "Material", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="card">
        <div class="row">
            <div class="col-lg-12 p-4">
                <h4>افزودن تجهیزات</h4>
                <hr />
                <form class="form-control">
                    <div class="row justify-content-center">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="col-lg-2">
                            @Html.LabelFor(model => model.MaterialCode, htmlAttributes: new { @class = "control-label h6" })
                            @Html.EditorFor(model => model.MaterialCode, new { htmlAttributes = new { @class = "form-control border-primary" } })
                            @Html.ValidationMessageFor(model => model.MaterialCode, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-lg-4">
                            @Html.LabelFor(model => model.MaterialName, htmlAttributes: new { @class = "control-label h6" })<span class="required text-danger">*</span>
                            @Html.EditorFor(model => model.MaterialName, new { htmlAttributes = new { @class = "form-control border-primary" } })
                            @Html.ValidationMessageFor(model => model.MaterialName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-2">
                            @Html.LabelFor(model => model.MaterialType, htmlAttributes: new { @class = "control-label h6" })<span class="required text-danger">*</span>
                            <div class="checkbox">
                                <select class="form-control border-primary selectpicker" data-live-search="true" name="MaterialType" required>
                                    <option selected hidden> انتخاب نوع تجهیزات</option>
                                    <option value="@string.Format("{0}","ماشین آلات")">ماشین آلات</option>
                                    <option value="@string.Format("{0}","ادوات")">ادوات</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.MaterialType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-1">
                            @Html.LabelFor(model => model.MaterialVahed, htmlAttributes: new { @class = "control-label h6" })
                            @Html.EditorFor(model => model.MaterialVahed, new { htmlAttributes = new { @class = "form-control border-primary" } })
                            @Html.ValidationMessageFor(model => model.MaterialVahed, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row justify-content-center mt-4">
                        <div class="col-lg-2">
                            <label class="h5">آپلود عکس تجهیزات</label><span class="required text-danger">*</span>
                            <div class="form-group">
                                <div class="input-group">
                                    <div class="custom-file mb-2">
                                        <input class="custom-file-input" type="file" name="pic" id="customFile" accept="image/*" onchange="showMyImage(this)">
                                        <label class="custom-file-label getFile" for="customFile">فایل عکس</label>
                                    </div>
                                </div>
                            </div>
                            <div id="file-upload-filename"></div>
                            <script>
                                //Name of File
                                var input = document.getElementById('customFile');
                                var infoArea = document.getElementById('file-upload-filename');

                                input.addEventListener('change', showFileName);

                                function showFileName(event) {

                                    // the change event gives us the input it occurred in
                                    var input = event.srcElement;

                                    // the input has an array of files in the `files` property, each one has a name that you can use. We're just using the name here.
                                    var fileName = input.files[0].name;

                                    // use fileName however fits your app best, i.e. add it into a div
                                    infoArea.textContent = 'نام فایل: ' + fileName;
                                }
                            </script>
                        </div>
                        <div class="col-lg-2">
                            <img id="thumbnil" style="width:80%;" src="" alt="" />
                        </div>
                    </div>
                    <div class="row mt-5 justify-content-center">
                        <div class="col-2">
                            <input class="btn btn-success btn-block" type="submit" value="ثبت" />
                        </div>
                        <div class="col-2">
                            <a class="btn btn-outline-dark btn-block" href="~/Material">بازگشت</a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
}


